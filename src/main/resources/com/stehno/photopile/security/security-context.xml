<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2013 Christopher J. Stehno
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~         http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/login.html*" security="none"/>

    <http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="authenticationManager" entry-point-ref="oauthAuthenticationEntryPoint" >
        <intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"  />
        <custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER" />
    </http>
    <http pattern="/api/**" create-session="never" entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager">
        <anonymous enabled="false"/>
        <intercept-url pattern="/api/**" access="ROLE_USER" />
        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
    </http>

    <!--
        FIXME: https is a bit of a pain in the ass unless you can afford to purchase a real certificate.

        For now, I am going to disable https since this app even when deployed will be inside of a home network.
        I can revisit getting https working later - the web interface works fine; however, remote rest clients cannot connect because
        my certificate is not a real one and none of the provided means of "fixing" the issue worked - and they seemed like hacks anyway.

        Update: I re-enabled this until such time as I actually use OAUTH
    -->

    <http auto-config="true">
        <intercept-url pattern="/**" access="ROLE_USER" requires-channel="https" />
        <!--<intercept-url pattern="/**" access="ROLE_USER" /> non-https version -->

        <form-login login-page='/login.html'/>

        <port-mappings>
            <port-mapping http="8080" https="8443"/>
        </port-mappings>

        <!--<session-management invalid-session-url="/invalidsession.html" />--><!-- FIXME: this seems twitchy -->
        <logout delete-cookies="JSESSIONID" />
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsManager">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
        <authentication-provider user-service-ref="clientDetailsUserService"  />
    </authentication-manager>

    <!-- FIXME: externalize the secret -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <beans:constructor-arg value="ChangmeToSomethingSecret" />
    </beans:bean>

    <!-- FIXME: add remember me functions:
        http://static.springsource.org/spring-security/site/docs/3.1.x/reference/remember-me.html
    -->

    <beans:bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <beans:property name="enableAuthorities" value="true" />
        <beans:property name="enableGroups" value="false" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <!-- OAUTH Configuration: Authorization Server -->

    <oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code />
        <oauth:implicit />
        <oauth:refresh-token />
        <oauth:client-credentials />
        <oauth:password />
    </oauth:authorization-server>

    <oauth:client-details-service id="clientDetails">
        <oauth:client client-id="desktop" secret="barbaz" authorized-grant-types="client_credentials" authorities="ROLE_USER" />
        <!--<oauth:client client-id="desktop" secret="barbaz" resource-ids="stuff" authorized-grant-types="client_credentials" authorities="ROLE_USER" />-->
    </oauth:client-details-service>

    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="clientDetailsService" ref="clientDetails"/>
    </beans:bean>

    <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

    <beans:bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetails" />
    </beans:bean>

    <beans:bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <beans:property name="realmName" value="photopile" />
    </beans:bean>

    <beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
    </beans:bean>

    <oauth:resource-server id="resourceServerFilter" resource-id="photopile" token-services-ref="tokenServices" />

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>